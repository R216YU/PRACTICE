{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport { createStore } from \"vuex\";\nimport { VuexPersistence } from \"vuex-persist\";\nconst vuexPersist = new VuexPersistence({\n  storage: localStorage\n});\nexport default createStore({\n  // データの状態\n  state: {\n    count: 0,\n    memos: []\n  },\n  // データの取得\n  getters: {\n    getCount: state => {\n      return state.memos.length;\n    },\n    getMemos: state => {\n      return state.memos;\n    },\n    getSingleMemo: state => id => {\n      return state.memos.find(memo => memo.id == id);\n    }\n  },\n  // データの更新\n  mutations: {\n    RESTORE_MUTATION: vuexPersist.RESTORE_MUTATION,\n    saveMutation: (state, newMemo) => {\n      newMemo.id = ++state.count;\n      state.memos.unshift(newMemo);\n    },\n    updateMutation: (state, newMemo) => {\n      // 編集対象のメモを見つける\n      const updatedMemo = state.memos.find(memo => memo.id === newMemo.id);\n      // そのメモを直接書き換える\n      updatedMemo.title = newMemo.title;\n      updatedMemo.content = newMemo.content;\n    },\n    deleteMutation: (state, id) => {\n      state.memos = state.memos.filter(memo => memo.id !== id);\n    }\n  },\n  plugins: [vuexPersist.plugin]\n});","map":{"version":3,"names":["createStore","VuexPersistence","vuexPersist","storage","localStorage","state","count","memos","getters","getCount","length","getMemos","getSingleMemo","id","find","memo","mutations","RESTORE_MUTATION","saveMutation","newMemo","unshift","updateMutation","updatedMemo","title","content","deleteMutation","filter","plugins","plugin"],"sources":["D:/REPOSITORY/PRACTICE/vue3-memopad/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\nimport { VuexPersistence } from \"vuex-persist\";\n\nconst vuexPersist = new VuexPersistence({\n  storage: localStorage,\n});\n\nexport default createStore({\n  // データの状態\n  state: {\n    count: 0,\n    memos: [],\n  },\n  // データの取得\n  getters: {\n    getCount: (state) => {\n      return state.memos.length;\n    },\n    getMemos: (state) => {\n      return state.memos;\n    },\n    getSingleMemo: (state) => (id) => {\n      return state.memos.find((memo) => memo.id == id);\n    },\n  },\n  // データの更新\n  mutations: {\n    RESTORE_MUTATION: vuexPersist.RESTORE_MUTATION,\n    saveMutation: (state, newMemo) => {\n      newMemo.id = ++state.count;\n      state.memos.unshift(newMemo);\n    },\n    updateMutation: (state, newMemo) => {\n      // 編集対象のメモを見つける\n      const updatedMemo = state.memos.find((memo) => memo.id === newMemo.id);\n      // そのメモを直接書き換える\n      updatedMemo.title = newMemo.title;\n      updatedMemo.content = newMemo.content;\n    },\n    deleteMutation: (state, id) => {\n      state.memos = state.memos.filter((memo) => memo.id !== id);\n    },\n  },\n  plugins: [vuexPersist.plugin],\n});\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,SAASC,eAAe,QAAQ,cAAc;AAE9C,MAAMC,WAAW,GAAG,IAAID,eAAe,CAAC;EACtCE,OAAO,EAAEC;AACX,CAAC,CAAC;AAEF,eAAeJ,WAAW,CAAC;EACzB;EACAK,KAAK,EAAE;IACLC,KAAK,EAAE,CAAC;IACRC,KAAK,EAAE;EACT,CAAC;EACD;EACAC,OAAO,EAAE;IACPC,QAAQ,EAAGJ,KAAK,IAAK;MACnB,OAAOA,KAAK,CAACE,KAAK,CAACG,MAAM;IAC3B,CAAC;IACDC,QAAQ,EAAGN,KAAK,IAAK;MACnB,OAAOA,KAAK,CAACE,KAAK;IACpB,CAAC;IACDK,aAAa,EAAGP,KAAK,IAAMQ,EAAE,IAAK;MAChC,OAAOR,KAAK,CAACE,KAAK,CAACO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,IAAIA,EAAE,CAAC;IAClD;EACF,CAAC;EACD;EACAG,SAAS,EAAE;IACTC,gBAAgB,EAAEf,WAAW,CAACe,gBAAgB;IAC9CC,YAAY,EAAEA,CAACb,KAAK,EAAEc,OAAO,KAAK;MAChCA,OAAO,CAACN,EAAE,GAAG,EAAER,KAAK,CAACC,KAAK;MAC1BD,KAAK,CAACE,KAAK,CAACa,OAAO,CAACD,OAAO,CAAC;IAC9B,CAAC;IACDE,cAAc,EAAEA,CAAChB,KAAK,EAAEc,OAAO,KAAK;MAClC;MACA,MAAMG,WAAW,GAAGjB,KAAK,CAACE,KAAK,CAACO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKM,OAAO,CAACN,EAAE,CAAC;MACtE;MACAS,WAAW,CAACC,KAAK,GAAGJ,OAAO,CAACI,KAAK;MACjCD,WAAW,CAACE,OAAO,GAAGL,OAAO,CAACK,OAAO;IACvC,CAAC;IACDC,cAAc,EAAEA,CAACpB,KAAK,EAAEQ,EAAE,KAAK;MAC7BR,KAAK,CAACE,KAAK,GAAGF,KAAK,CAACE,KAAK,CAACmB,MAAM,CAAEX,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;IAC5D;EACF,CAAC;EACDc,OAAO,EAAE,CAACzB,WAAW,CAAC0B,MAAM;AAC9B,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}