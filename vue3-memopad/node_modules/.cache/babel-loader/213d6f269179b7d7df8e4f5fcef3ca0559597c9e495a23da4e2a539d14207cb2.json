{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MemoForm = _resolveComponent(\"MemoForm\");\n  return $options.memo ? (_openBlock(), _createBlock(_component_MemoForm, {\n    key: 0,\n    h1: \"Editing Memo\",\n    button: \"Update\",\n    memo: $options.memo\n  }, null, 8 /* PROPS */, [\"memo\"])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_1, \"Memo doesn't exist. id:\" + _toDisplayString(this.$route.params.id), 1 /* TEXT */));\n}","map":{"version":3,"names":["$options","memo","_createBlock","_component_MemoForm","h1","button","_createElementBlock","_hoisted_1","_toDisplayString","$route","params","id"],"sources":["D:\\REPOSITORY\\PRACTICE\\vue3-memopad\\src\\views\\EditView.vue"],"sourcesContent":["<template class=\"bg-gray-200\">\r\n  <MemoForm v-if=\"memo\" h1=\"Editing Memo\" button=\"Update\" :memo=\"memo\" />\r\n  <p v-else>Memo doesn't exist. id:{{ this.$route.params.id }}</p>\r\n</template>\r\n\r\n<script>\r\nimport MemoForm from \"@/components/MemoForm.vue\";\r\n\r\nexport default {\r\n  name: \"EditView\",\r\n  components: {\r\n    MemoForm,\r\n  },\r\n  computed: {\r\n    memo: function () {\r\n      const id = parseInt(this.$route.params.id);\r\n      return this.$store.getters.getSingleMemo(id);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;;;;SACkBA,QAAA,CAAAC,IAAI,I,cAApBC,YAAA,CAAuEC,mBAAA;;IAAjDC,EAAE,EAAC,cAAc;IAACC,MAAM,EAAC,QAAQ;IAAEJ,IAAI,EAAED,QAAA,CAAAC;sDAC/DK,mBAAA,CAAgE,KAAAC,UAAA,EAAtD,yBAAuB,GAAAC,gBAAA,MAAQC,MAAM,CAACC,MAAM,CAACC,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}