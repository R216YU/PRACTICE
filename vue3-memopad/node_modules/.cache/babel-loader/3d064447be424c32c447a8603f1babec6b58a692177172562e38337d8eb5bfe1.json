{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport { createStore } from \"vuex\";\nexport default createStore({\n  // データの状態\n  state: {\n    count: 0,\n    memos: [{\n      id: 1,\n      title: \"プログラミングの学習\",\n      content: \"Vue3を学習する\"\n    }, {\n      id: 2,\n      title: \"ジムに行く\",\n      content: \"チェストプレス、レッグプレス、有酸素\"\n    }, {\n      id: 3,\n      title: \"部屋の掃除\",\n      content: \"フローリングの掃除をする\"\n    }]\n  },\n  // データの取得\n  getters: {\n    getCount: state => {\n      return state.memos.length;\n    },\n    getMemos: state => {\n      return state.memos;\n    },\n    getSingleMemo: state => id => {\n      return state.memos.find(memo => memo.id == id);\n    }\n  },\n  // データの更新\n  mutations: {\n    saveMutation: (state, newMemo) => {\n      newMemo.id = ++state.count;\n      state.memos.unshift(newMemo);\n    },\n    updateMutation: (state, newMemo) => {\n      state.memos.map(memo => {});\n    }\n  }\n});","map":{"version":3,"names":["createStore","state","count","memos","id","title","content","getters","getCount","length","getMemos","getSingleMemo","find","memo","mutations","saveMutation","newMemo","unshift","updateMutation","map"],"sources":["D:/REPOSITORY/PRACTICE/vue3-memopad/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\n\nexport default createStore({\n  // データの状態\n  state: {\n    count: 0,\n    memos: [\n      { id: 1, title: \"プログラミングの学習\", content: \"Vue3を学習する\" },\n      { id: 2, title: \"ジムに行く\", content: \"チェストプレス、レッグプレス、有酸素\" },\n      { id: 3, title: \"部屋の掃除\", content: \"フローリングの掃除をする\" },\n    ],\n  },\n  // データの取得\n  getters: {\n    getCount: (state) => {\n      return state.memos.length;\n    },\n    getMemos: (state) => {\n      return state.memos;\n    },\n    getSingleMemo: (state) => (id) => {\n      return state.memos.find((memo) => memo.id == id);\n    },\n  },\n  // データの更新\n  mutations: {\n    saveMutation: (state, newMemo) => {\n      newMemo.id = ++state.count;\n      state.memos.unshift(newMemo);\n    },\n    updateMutation: (state, newMemo) => {\n      state.memos.map((memo) => {\n        \n      })\n    },\n  },\n});\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzB;EACAC,KAAK,EAAE;IACLC,KAAK,EAAE,CAAC;IACRC,KAAK,EAAE,CACL;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,YAAY;MAAEC,OAAO,EAAE;IAAY,CAAC,EACpD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAqB,CAAC,EACxD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAe,CAAC;EAEtD,CAAC;EACD;EACAC,OAAO,EAAE;IACPC,QAAQ,EAAGP,KAAK,IAAK;MACnB,OAAOA,KAAK,CAACE,KAAK,CAACM,MAAM;IAC3B,CAAC;IACDC,QAAQ,EAAGT,KAAK,IAAK;MACnB,OAAOA,KAAK,CAACE,KAAK;IACpB,CAAC;IACDQ,aAAa,EAAGV,KAAK,IAAMG,EAAE,IAAK;MAChC,OAAOH,KAAK,CAACE,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACT,EAAE,IAAIA,EAAE,CAAC;IAClD;EACF,CAAC;EACD;EACAU,SAAS,EAAE;IACTC,YAAY,EAAEA,CAACd,KAAK,EAAEe,OAAO,KAAK;MAChCA,OAAO,CAACZ,EAAE,GAAG,EAAEH,KAAK,CAACC,KAAK;MAC1BD,KAAK,CAACE,KAAK,CAACc,OAAO,CAACD,OAAO,CAAC;IAC9B,CAAC;IACDE,cAAc,EAAEA,CAACjB,KAAK,EAAEe,OAAO,KAAK;MAClCf,KAAK,CAACE,KAAK,CAACgB,GAAG,CAAEN,IAAI,IAAK,CAE1B,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}